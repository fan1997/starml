cmake_minimum_required(VERSION 3.14 FATAL_ERROR)
project(starml CXX)

option(USE_CUDA "Build with CUDA" ON)
option(USE_TEST "Build with test" ON)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(starml_cmake_dir ${PROJECT_SOURCE_DIR}/cmake)
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
set(THIRD_PARTY_DIR "${PROJECT_SOURCE_DIR}/third_party" 
  CACHE PATH "Where the third party are")

list(APPEND CMAKE_MODULE_PATH ${starml_cmake_dir}/third_party)
list(APPEND CMAKE_MODULE_PATH ${starml_cmake_dir})
include(util)
include(third_party)

if (USE_CUDA)
  set(CUDA_SEPARABLE_COMPILATION ON)
  list(APPEND CUDA_NVCC_FLAGS -w -Wno-deprecated-gpu-targets)
  if(CMAKE_BUILD_TYPE MATCHES Debug)
    if(CUDA_VERSION VERSION_GREATER_EQUAL "10.0")
      set(CUDA_NVCC_GENCODES "arch=compute_61,code=sm_61" "arch=compute_61,code=compute_61" "arch=compute_75,code=sm_75" "arch=compute_75,code=compute_75")
    else()
      set(CUDA_NVCC_GENCODES "arch=compute_61,code=sm_61" "arch=compute_61,code=compute_61")
    endif()
  else()
    list(APPEND __cuda_nvcc_gencodes "arch=compute_60,code=sm_60")
    list(APPEND __cuda_nvcc_gencodes "arch=compute_60,code=compute_60")
    list(APPEND __cuda_nvcc_gencodes "arch=compute_61,code=sm_61")
    list(APPEND __cuda_nvcc_gencodes "arch=compute_61,code=compute_61")
    if(CUDA_VERSION VERSION_GREATER_EQUAL "10.0")
      list(APPEND __cuda_nvcc_gencodes "arch=compute_70,code=sm_70")
      list(APPEND __cuda_nvcc_gencodes "arch=compute_70,code=compute_70")
      list(APPEND __cuda_nvcc_gencodes "arch=compute_75,code=sm_75")
      list(APPEND __cuda_nvcc_gencodes "arch=compute_75,code=compute_75")
      list(APPEND __cuda_nvcc_gencodes "arch=compute_80,code=sm_80")
      list(APPEND __cuda_nvcc_gencodes "arch=compute_80,code=compute_80")
    endif()
    set(CUDA_NVCC_GENCODES ${__cuda_nvcc_gencodes})
  endif()
  foreach(CUDA_NVCC_GENCODE ${CUDA_NVCC_GENCODES})
    list(APPEND CUDA_NVCC_FLAGS -gencode ${CUDA_NVCC_GENCODE})
  endforeach()
  message("-- CUDA_NVCC_FLAGS: " ${CUDA_NVCC_FLAGS})
endif()

message("-- CMAKE_CXX_COMPILER_VERSION: " ${CMAKE_CXX_COMPILER_VERSION})

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -Wno-sign-compare -Wno-unused-function -fPIC")

include(starml)

if (USE_TEST)
  enable_testing()
  include(gtest)
  add_subdirectory(test)
endif()
